--following 2 statements/queries display both tables separately
select customerid, lastname
from SalesLT.Customer

select SalesOrderID, TotalDue, CustomerID
from SalesLT.SalesOrderHeader

--But if we want above 2 tables merged together on the 
--customerID field (which is what relates the two tables together), then we use JOIN

--there's 847 total customers in the customer table
--and there's 32 records in salesOrderHeader table

--First lets do it without using JOIN keyword
--the following is called a CROSS JOIN
SELECT Customer.CustomerID, LastName, SalesOrderID, TotalDue
from SalesLT.Customer, SalesLT.SalesOrderHeader
--When we do this without using JOIN it returns 27,104 rows (847 customers x 32 SalesOrderHeaders)
--Meaning for each of the 847 customers it creates 32 records, one for each salesorderheader
--because it doesn't know what the tables need to merge based on
--thus we need to correct the error by using JOIN

select Customer.CustomerID, LastName, FirstName, SalesOrderID, TotalDue
From SalesLT.Customer LEFT JOIN SalesLT.SalesOrderHeader 
on Customer.CustomerID=SalesOrderHeader.CustomerID
Order by SalesOrderID desc	--displays 847 records (same as customer)
--The LEFT JOIN causes everything on the left table (Customer) display
--and for each record if there is a matching SalesOrderHeader table record it displays after it
--and if there is not a matching SalesOrderHeader table record it displays Null 
--values for the SalesOrderHeader portion


--If in the above table we want to see all records that do not have SalesOrderID (the primary key
--of the SalesOrderHeader table) then we do the following query
select Customer.CustomerID, LastName, FirstName, SalesOrderID, TotalDue
From SalesLT.Customer LEFT JOIN SalesLT.SalesOrderHeader 
on Customer.CustomerID=SalesOrderHeader.CustomerID
where SalesOrderID is null	--displays 815 records (customer's 847 - salesorderheader's 32 = 815)
--this query pretty much shows everything in the left join minus everything in the join (inner join)


SELECT Customer.CustomerID, LastName, SalesOrderID, TotalDue
from SalesLT.Customer JOIN SalesLT.SalesOrderHeader
ON Customer.CustomerID = SalesOrderHeader.CustomerID
--this returns 32 records, one for each record in SalesOrderHeader
--it only displays the matched values, so since every customerID in
--SalesOrderHeader is a customerID that exists in the Customer table
--the result will consist of one value for each record in the table with 
--the lesser of the 2 tables in # of records


select CustomerID, LastName, FirstName
From SalesLT.Customer	--847 customers

Select SalesOrderID, TotalDue
from SalesLT.SalesOrderHeader	--32 sales order headers

select Customer.CustomerID, LastName, FirstName, SalesOrderID, TotalDue
From SalesLT.Customer JOIN SalesLT.SalesOrderHeader 
on Customer.CustomerID=SalesOrderHeader.CustomerID	--displays the 32 matching values

--the query above and below does the same because JOIN keyword does the same as INNER JOIN
--JOIN is inner by default
select Customer.CustomerID, LastName, FirstName, SalesOrderID, TotalDue
From SalesLT.Customer INNER JOIN SalesLT.SalesOrderHeader 
on Customer.CustomerID=SalesOrderHeader.CustomerID

select Customer.CustomerID, LastName, FirstName, SalesOrderID, TotalDue
From SalesLT.Customer LEFT JOIN SalesLT.SalesOrderHeader 
on Customer.CustomerID=SalesOrderHeader.CustomerID
Order by SalesOrderID desc	--displays 847 records (same as customer)
--The LEFT JOIN causes everything on the left table (Customer) display
--and for each record if there is a matching SalesOrderHeader table record it displays after it
--and if there is not a matching SalesOrderHeader table record it displays Null 
--values for the SalesOrderHeader portion


--If in the above table we want to see all records that do not have SalesOrderID (the primary key
--of the SalesOrderHeader table) then we do the following query
select Customer.CustomerID, LastName, FirstName, SalesOrderID, TotalDue
From SalesLT.Customer LEFT JOIN SalesLT.SalesOrderHeader 
on Customer.CustomerID=SalesOrderHeader.CustomerID
where SalesOrderID is null	--displays 815 records (customer's 847 - salesorderheader's 32 = 815)
--this query pretty much shows everything in the left join minus everything in the join (inner join)
